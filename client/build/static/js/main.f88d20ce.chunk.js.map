{"version":3,"sources":["components/AppNav.js","components/Login.js","components/Student.js","queries/queries.js","components/StudentList.js","Data.js","context.js","components/Details.js","components/Home.js","components/AddStudent.js","App.js","serviceWorker.js","index.js"],"names":["AppNav","state","isOpen","toggle","_this","setState","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","Link","to","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","Component","AppLogin","Fragment","type","placeholder","value","href","Student","name","props","student","key","getStudentsQuery","gql","_templateObject","gridStyle","display","gridTemplateColumns","gridGap","width","height","textAlign","graphql","style","data","Object","objectSpread","loading","students","map","item","Student_Student","id","getStuds","Students","email","phone","city","country","organization","jobProfile","additionalInfo","detailProduct","StudentContext","React","createContext","StudentProvider","SampleDetail","setStudents","tempStudents","forEach","singleItem","concat","toConsumableArray","getStudent","find","handleDetail","stud","Provider","children","StudentConsumer","Consumer","StudentDetails","context","_context$state$Sample","Home","AddStudent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","console","log","_this2","onSubmit","handleSubmit","bind","htmlFor","aria-describedby","onChange","target","client","ApolloClient","uri","App","react_apollo_esm","AppNav_AppNav","Switch","Route","exact","path","component","StudentList","Boolean","window","location","hostname","match","ReactDOM","render","context_StudentProvider","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f88d20ce.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container\r\n} from 'reactstrap';\r\n\r\nexport default class AppNav extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarBrand>\r\n              <Link className='navbar-brand' to= '/'>\r\n                ScHoOl\r\n              </Link>\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <Link className='nav-link' to='/list'>\r\n                      Students\r\n                    </Link>\r\n                </NavItem><NavItem>\r\n                    <Link className='nav-link' to='/add'>\r\n                      Add\r\n                    </Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Link className='nav-link' to='/login'>\r\n                      Login\r\n                    </Link>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './Login.css';\r\n\r\nclass AppLogin extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"d-flex justify-content-center h-100\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className='float-left'>Sign In</h3>\r\n                <div className=\"d-flex justify-content-end social_icon\">\r\n                  <span><i className=\"fab fa-facebook-square\"></i></span>\r\n                  <span><i className=\"fab fa-google-plus-square\"></i></span>\r\n                  <span><i className=\"fab fa-twitter-square\"></i></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form>\r\n                  <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\"><i className=\"fas fa-user\"></i></span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"username\"/>\r\n                  </div>\r\n                  <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\"><i className=\"fas fa-key\"></i></span>\r\n                    </div>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"password\"/>\r\n                  </div>\r\n                  <div className=\"row align-items-center remember\">\r\n                    <input type=\"checkbox\"/>Remember Me\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Login\" className=\"btn float-right login_btn bg-dark text-white\"/>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <div className=\"d-flex justify-content-center links\">\r\n                  Don't have an account?<a href=\"google.com\">Sign Up</a>\r\n                </div>\r\n                <div className=\"d-flex justify-content-center\">\r\n                  <a href=\"google.com\">Forgot your password?</a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppLogin;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Student.css';\r\n\r\nexport default class Student extends Component {\r\n  render() {\r\n    const {\r\n      name\r\n    } = this.props.student;\r\n    return (\r\n      <React.Fragment>\r\n        <div key={name} className=\"card\">\r\n          <div className=\"avatar-container\">\r\n          </div>\r\n          {name}\r\n          <Link to='/details' className=\"view-details-link\">\r\n            <button className='font-italic' >\r\n              View Details\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n","import {gql} from 'apollo-boost';\r\n\r\n\r\nconst getStudentsQuery = gql`\r\n    {\r\n        students {\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\n// const addStudentsQuery = gql`\r\n//\r\n// `\r\n\r\nexport { getStudentsQuery };","import React from 'react';\r\nimport Student from './Student';\r\nimport {graphql} from \"react-apollo\";\r\nimport { getStudentsQuery} from \"../queries/queries\";\r\n\r\nconst gridStyle = {\r\n  display:'grid',\r\n  gridTemplateColumns : '1fr 1fr 1fr',\r\n  gridGap : '30px',\r\n  width :\"100%\",\r\n  height:\"300px\",\r\n  textAlign : \"center\",\r\n};\r\n\r\nconst StudentList = (props) => {\r\n  const getStuds = () =>{\r\n    const data = {...props.data}\r\n    if(data.loading){\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return data.students.map( item => {\r\n        return <Student id = {item.name} student={item}/>\r\n      })\r\n    }\r\n  };\r\n  return(\r\n    <React.Fragment>\r\n      <div className=\"py-5\">\r\n        <div className=\"container\">\r\n          <div style={gridStyle}>\r\n            {\r\n              getStuds()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default graphql(getStudentsQuery)(StudentList);\r\n// export default StudentList;\r\n\r\n","export const Students = [\r\n    {\r\n        \"id\": 0,\r\n        \"name\": \"John Smith\",\r\n        \"email\": \"jsmith@test.com\",\r\n        \"phone\": \"123456789\",\r\n        \"city\": \"bangalore\",\r\n        \"state\": \"karnataka\",\r\n        \"country\": \"India\",\r\n        \"organization\": \"Company 1\",\r\n        \"jobProfile\": \"Software Developer\",\r\n        \"additionalInfo\": \"Has Bought a lot of products before and a high Value Customer\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"ABCD\",\r\n        \"email\": \"abcd@test.com\",\r\n        \"phone\": \"987654321\",\r\n        \"city\": \"Mangalore\",\r\n        \"state\": \"karnataka\",\r\n        \"country\": \"India\",\r\n        \"organization\": \"Company 2\",\r\n        \"jobProfile\": \"Software Developer\",\r\n        \"additionalInfo\": \"Buys Products Rarely\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Tyrion\",\r\n        \"email\": \"tyrion@test.com\",\r\n        \"phone\": \"123412345\",\r\n        \"city\": \"Chennai\",\r\n        \"state\": \"Tamil Nadu\",\r\n        \"country\": \"India\",\r\n        \"organization\": \"Company 3\",\r\n        \"jobProfile\": \"Software Developer\",\r\n        \"additionalInfo\": \"Buys Lots of Products in general\"\r\n    },\r\n];\r\n\r\nexport const detailProduct = {\r\n    \"id\": 3,\r\n    \"name\": \"Archis\",\r\n    \"email\": \"archis@test.com\",\r\n    \"phone\": \"7028111965\",\r\n    \"city\": \"Mumbai\",\r\n    \"state\": \"Maharashtra\",\r\n    \"country\": \"India\",\r\n    \"organization\": \"Google\",\r\n    \"jobProfile\": \"Software Developer\",\r\n    \"additionalInfo\": \"Is Addict\"\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Students, detailProduct } from './Data'\r\n\r\nconst StudentContext = React.createContext();\r\n\r\nclass StudentProvider extends Component {\r\n    state={\r\n        students: [],\r\n        SampleDetail: detailProduct\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setStudents();\r\n    }\r\n\r\n    setStudents = () =>{\r\n        let tempStudents = [];\r\n        Students.forEach(item => {\r\n            const singleItem = { ...item };\r\n            tempStudents = [ ...tempStudents,singleItem ];\r\n        });\r\n        this.setState(()=>{\r\n            return { students : tempStudents };\r\n        });\r\n    };\r\n\r\n    getStudent = id =>{\r\n        return this.state.students.find(item=>item.id===id);\r\n    };\r\n\r\n    handleDetail = id =>{\r\n        const stud = this.getStudent(id);\r\n        this.setState(()=>{\r\n            return { SampleDetail : stud };\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <StudentContext.Provider value={{\r\n                state: this.state,\r\n                handleDetail: this.handleDetail,\r\n            }}>\r\n                {this.props.children}\r\n            </StudentContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst StudentConsumer = StudentContext.Consumer;\r\n\r\nexport { StudentProvider, StudentConsumer };","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StudentConsumer } from '../context';\r\nimport './Details.css';\r\n\r\nconst StudentDetails = () => {\r\n    return(\r\n      <StudentConsumer>\r\n        {\r\n          context => {\r\n            const {\r\n              id,\r\n              name,\r\n              email,\r\n              phone,\r\n              city,\r\n              state,\r\n              country,\r\n              organization,\r\n              jobProfile,\r\n              additionalInfo,\r\n            } = context.state.SampleDetail;\r\n            return (\r\n              <React.Fragment>\r\n                {/* Title */}\r\n                <div className=\"container py-3 display-4\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto text-center text-blue\">\r\n                      <h1>{name}</h1>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* Info */}\r\n                <div className=\"row d.flex\">\r\n                  <div className=\"col-10 mx-auto col-md-6 my-4 text-capitalize details-img\" />\r\n                  <div className=\"col-10 mx-auto col-md-6 my-4 text-capitalize font-weight-light\">\r\n                    <h4>\r\n                      ID :\r\n                      {' '}\r\n                      {id}\r\n                    </h4>\r\n                    <h4>\r\n                      Email :\r\n                      {' '}\r\n                      {email}\r\n                    </h4>\r\n                    <h4>\r\n                      Phone :\r\n                      {' '}\r\n                      {phone}\r\n                    </h4>\r\n                    <h4>\r\n                      City :\r\n                      {' '}\r\n                      {city}\r\n                    </h4>\r\n                    <h4>\r\n                      State :\r\n                      {' '}\r\n                      {state}\r\n                    </h4>\r\n                    <h4>\r\n                      Country :\r\n                      {' '}\r\n                      {country}\r\n                    </h4>\r\n                    <h4>\r\n                      Organization :\r\n                      {' '}\r\n                      {organization}\r\n                    </h4>\r\n                    <h4>\r\n                      Job profile :\r\n                      {' '}\r\n                      {jobProfile}\r\n                    </h4>\r\n                    <h4>\r\n                      Additional Info :\r\n                      {' '}\r\n                      {additionalInfo}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"btn-container mx-auto my-2 text-center\">\r\n                  <Link to=\"/list\" className=\" details-link\">\r\n                    <button>\r\n                      Back\r\n                    </button>\r\n                  </Link>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          }\r\n        }\r\n      </StudentConsumer>\r\n    )\r\n};\r\n\r\nexport default StudentDetails;","import React, {Component} from 'react';\r\n// import { gql } from 'apollo-boost';\r\n// import {graphql} from \"react-apollo\";\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            Home\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\nimport {graphql} from \"react-apollo\";\r\nimport {getStudentsQuery} from \"../queries/queries\";\r\n\r\n// const AddStudent = (props) => {\r\n//   return (\r\n//     <React.Fragment>\r\n//       <div className=\"d-flex justify-content-center w-100 h-100\">\r\n//         <form className=\"card\">\r\n//           <div className=\"form-group px-3\">\r\n//             <label htmlFor=\"InputName\">Name</label>\r\n//             <input type=\"text\" className=\"form-control \" id=\"InputName\" aria-describedby=\"emailHelp\"\r\n//              placeholder=\"Enter Name\"/>\r\n//           </div>\r\n//           <div className=\"form-group px-3\">\r\n//             <label htmlFor=\"InputEmail\">Email</label>\r\n//             <input type=\"email\" className=\"form-control\" id=\"InputEmail\" placeholder=\"Email\"/>\r\n//             <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.\r\n//             </small>\r\n//           </div>\r\n//           {/*<div className=\"form-group form-check\">*/}\r\n//             {/*<input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>*/}\r\n//               {/*<label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>*/}\r\n//           {/*</div>*/}\r\n//           <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n//         </form>\r\n//       </div>\r\n//     </React.Fragment>\r\n//   )\r\n// }\r\n\r\nclass AddStudent extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state= {\r\n      name: '',\r\n      email: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit (e){\r\n    e.preventDefault();\r\n    console.log(this.state)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-flex justify-content-center w-100 h-100\">\r\n          <form className=\"card pt-2\" onSubmit={this.handleSubmit.bind(this)}>\r\n            <div className=\"form-group px-3\">\r\n              <label htmlFor=\"InputName\">Name</label>\r\n              <input type=\"text\" className=\"form-control \" id=\"InputName\" aria-describedby=\"emailHelp\"\r\n                     placeholder=\"Enter Name\" onChange={(e)=>this.setState({name:e.target.value})}/>\r\n            </div>\r\n            <div className=\"form-group px-3\">\r\n              <label htmlFor=\"InputEmail\">Email</label>\r\n              <input type=\"email\" className=\"form-control\" id=\"InputEmail\" placeholder=\"Email\" onChange={(e)=>this.setState({email:e.target.value})}/>\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            {/*<div className=\"form-group form-check\">*/}\r\n            {/*<input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>*/}\r\n            {/*<label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>*/}\r\n            {/*</div>*/}\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getStudentsQuery)(AddStudent);","import React, { Component } from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Components\nimport AppNav from './components/AppNav'\nimport AppLogin from \"./components/Login\";\nimport StudentList from './components/StudentList';\nimport StudentDetails from './components/Details'\nimport Home from './components/Home';\nimport AddStudent from './components/AddStudent'\n//Apollo\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from \"react-apollo\";\n\n// Apollo client setup\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n});\n\nclass App extends Component {\n    render() {\n    return (\n        <ApolloProvider client={client}>\n          <AppNav/>\n            <Switch>\n                <Route exact path='/' component={Home}/>\n                <Route exact path='/list' component={StudentList}/>\n                <Route exact path='/add' component={AddStudent}/>\n                <Route path='/details' component={StudentDetails}/>\n                <Route path='/login' component={AppLogin}/>\n            </Switch>\n        </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StudentProvider} from \"./context\";\n\nReactDOM.render(\n    <StudentProvider>\n        <Router>\n            <App/>\n        </Router>\n    </StudentProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}